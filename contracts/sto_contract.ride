let coldVault = addressFromString("D_COLD_VAULT_ADDR")
let token = base58'D_ASSET_ID'
let tokenRate = D_RATE
let softCapWaves = D_SOFT_CAP_WAVES
let hardCapWaves = D_HARD_CAP_WAVES
let startDate = D_START_DATE
let endDate = D_FINISH_DATE
let whitelist = D_WHITELIST
 
let this = extract(tx.sender)
 
match tx {
  case sendTokens:TransferTransaction =>
    let requestedAmount = sendTokens.amount
    let amountBelowHardCap = requestedAmount <= (hardCapWaves / tokenRate)
    let leftToHardcap = hardCapWaves - wavesBalance(this)
    let amountBelowRemainder = requestedAmount <= (hardCapWaves / tokenRate)
    let correctAsset = sendTokens.assetId == token
    let afterStart = sendTokens.timestamp >= startDate
    let beforeEnd = sendTokens.timestamp <= endDate
  
    let buyTokensTx = transactionById(sendTokens.proofs[1])
    let buyTokensTxHeight = extract(transactionHeightById(sendTokens.proofs[1]))
    
    match buyTokensTx {
      case buyTokens : TransferTransaction =>
        let sendedAmount = buyTokens.amount
        let correctAmount = requestedAmount <= (sendedAmount / tokenRate)

        correctAsset && correctAmount
        && amountBelowHardCap && amountBelowRemainder
        && afterStart && beforeEnd
      case _ => false
    }
case _ => false
}
